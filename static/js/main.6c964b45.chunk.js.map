{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","ingredientList","updateIngredientList","loading","setLoading","inputRef","useRef","searchForRecipe","query","url","fetch","mode","then","response","json","res","hits","catch","err","console","log","useEffect","className","ref","placeholder","onClick","current","value","map","recipe","label","image","ingredientLines","src","step","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAuEeA,MAnEf,WACE,MAA+CC,mBAAS,IAAxD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MASlBC,EAAkB,SAACC,GACvBJ,GAAW,GACX,IAAIK,EAAG,mBAAeD,EAAf,mBATM,WASN,oBAVO,oCAWdE,MAAMD,EAAK,CAACE,KAAK,YAChBC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAELb,EAAqBa,EAAIC,MACzBZ,GAAW,MAEXa,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,GACrBd,GAAW,OAUf,OALAiB,qBAAU,WAERd,EAAgB,aACf,IAGD,qBAAKe,UAAU,MAAf,SAEE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,eAAf,UACE,uBACCC,IAAKlB,EACLmB,YAAY,sBAEb,wBAAQC,QAtCC,WACblB,EAAgBF,EAASqB,QAAQC,OACjCtB,EAASqB,QAAQC,MAAQ,IAoCrB,uBAEFxB,GAAW,2CACX,qBAAKmB,UAAU,UAAf,SACIrB,EAAe2B,KAAI,YAAe,IAAbC,EAAY,EAAZA,OACbC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,gBACrB,OACE,sBAAiBV,UAAU,aAA3B,UACE,+BAAOQ,IACP,qBAAKG,IAAKF,IACV,qBAAKT,UAAU,QAAf,SACCU,EAAgBJ,KAAI,SAACM,EAAMC,GAAP,OAAiB,4BAAgBD,GAARC,UAJtCL,cC5CVM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6c964b45.chunk.js","sourcesContent":["\nimport './App.css';\nimport {useEffect, useState, useRef} from \"react\";\n\nfunction App() {\n  const [ingredientList, updateIngredientList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const inputRef = useRef(null);\n  const API_KEY = \"7714138714b74de48a0e40101285c424\";\n  const API_ID = \"40fc4687\";\n\n    const search = () => {\n      searchForRecipe(inputRef.current.value);\n      inputRef.current.value = \"\";\n    }\n\n  const searchForRecipe = (query) => {\n    setLoading(true);\n    let url = `search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n    fetch(url, {mode:\"no-cors\"})\n    .then(response => {\n      return response.json()\n    })\n    .then(res => {\n      \n     updateIngredientList(res.hits);\n     setLoading(false);\n    })\n    .catch((err) =>{ \n      console.log(\"error\", err)\n      setLoading(false);\n    })\n  \n  }\n  \n  useEffect(()=> {\n    //edamam => dashboard\n    searchForRecipe(\"chicken\");\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <div className=\"InputWrapper\">\n          <input\n           ref={inputRef}\n           placeholder=\"Search for recipe\"\n          />\n          <button onClick={search}>Search</button>\n        </div>\n       {loading && <p>Loading...</p>}\n        <div className=\"Wrapper\">\n           {ingredientList.map(({recipe}) => {\n             const {label, image, ingredientLines} = recipe\n             return(\n               <div key={label} className=\"Ingredient\">\n                 <span>{label}</span>\n                 <img src={image} />\n                 <div className=\"Steps\">\n                 {ingredientLines.map((step, index) => <p key={index}>{step}</p> )}\n                 </div>\n               </div>\n             )\n           })}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}